<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hitwh.vblog.mapper.ArticleDoMapper">
  <resultMap id="BaseResultMap" type="com.hitwh.vblog.bean.ArticleDo">
    <id column="article_id" jdbcType="INTEGER" property="articleId" />
    <result column="virtual_id" jdbcType="VARCHAR" property="virtualId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="author_id" jdbcType="INTEGER" property="authorId" />
    <result column="cover" jdbcType="VARCHAR" property="cover" />
    <result column="hidden" jdbcType="INTEGER" property="hidden" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="article_abstract" jdbcType="VARCHAR" property="articleAbstract" />
    <result column="release_time" jdbcType="TIMESTAMP" property="releaseTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>

  <resultMap id="ArticleAndUserMap" type="com.hitwh.vblog.bean.ArticleAndUserDo">
    <association property="userDo" javaType="com.hitwh.vblog.bean.UserDo" resultMap="UserMap"/>
    <association property="articleDo" javaType="com.hitwh.vblog.bean.ArticleDo" resultMap="BaseResultMap" />
    <association property="articleDynamicDo" javaType="com.hitwh.vblog.bean.ArticleDynamicDo" resultMap="ArticleDynamicMap" />
  </resultMap>

  <resultMap id="UserMap" type="com.hitwh.vblog.bean.UserDo">
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
  </resultMap>

  <resultMap id="ArticleDynamicMap" type="com.hitwh.vblog.bean.ArticleDynamicDo">
    <result column="article_id" jdbcType="INTEGER" property="articleId" />
    <result column="thumb_num" jdbcType="INTEGER" property="thumbNum" />
    <result column="reading_num" jdbcType="INTEGER" property="readingNum" />
  </resultMap>

  <sql id="Base_Column_List">
    article_id, virtual_id, title, author_id, cover, hidden, content,
    article_abstract, release_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from vblog_article
    where article_id = #{articleId,jdbcType=INTEGER}
  </select>

  <select id="selectArticleNumByUserId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(*)
    from vblog_article
    where author_id = #{userId}
  </select>

  <select id="selectArticleNumber" resultType="java.lang.Integer">
    select count(*)
    from vblog_article
  </select>
  <select id="selectAllArticle" resultMap="ArticleAndUserMap">
    select vblog_article.article_id, vblog_article.virtual_id, title, author_id,
    nickname, cover, hidden, content, article_abstract,
    release_time, reading_num, thumb_num
    from vblog_article
    left join vblog_article_dynamic
    on vblog_article.article_id = vblog_article_dynamic.article_id
    left join vblog_user
    on vblog_article.author_id = vblog_user.user_id
  </select>
  <!--<select id="selectArticleByUserId" parameterType="java.lang.Integer" resultMap="ArticleAndUserMap">-->
    <!--select vblog_article.article_id, vblog_article.virtual_id,  title, author_id,-->
    <!--nickname, cover, hidden, content, article_abstract,-->
    <!--release_time, reading_num, thumb_num, vblog_label.label_id, label_name-->
    <!--from vblog_article_label-->
    <!--right join vblog_article-->
    <!--on vblog_article_label.article_id = vblog_article.article_id-->
    <!--right join vblog_article_dynamic-->
    <!--on vblog_article.article_id = vblog_article_dynamic.article_id-->
    <!--right join vblog_user-->
    <!--on vblog_article.author_id = vblog_user.user_id-->
    <!--left join vblog_label-->
    <!--on vblog_article_label.label_id = vblog_label.label_id-->
    <!--where vblog_article.author_id = #{userId}-->
    <!--limit #{start} ,#{num}-->
  <!--</select>-->

  <select id="selectArticleByUserId" parameterType="java.lang.Integer" resultMap="ArticleAndUserMap">
    select vblog_article.article_id, vblog_article.virtual_id, title, author_id,
    nickname, cover, hidden, content, article_abstract,
    release_time, reading_num, thumb_num
    from vblog_article
    left join vblog_article_dynamic
    on vblog_article.article_id = vblog_article_dynamic.article_id
    left join vblog_user
    on vblog_article.author_id = vblog_user.user_id
    where vblog_article.author_id = #{userId}
    limit #{start} ,#{num}
  </select>


  <select id="selectArticleNumByTitle" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(*)
    from vblog_article
    where title = #{title}
  </select>
  <select id="selectArticleByTitle" resultMap="ArticleAndUserMap">
    select vblog_article.article_id, vblog_article.virtual_id,  title, author_id,
    nickname, cover, hidden, content, article_abstract,
    release_time, reading_num, thumb_num
    from vblog_article
    left join vblog_article_dynamic
    on vblog_article.article_id = vblog_article_dynamic.article_id
    left join vblog_user
    on vblog_article.author_id = vblog_user.user_id
    where vblog_article.title like CONCAT('%',#{title},'%')
    limit #{start} ,#{num}
  </select>

  <select id="selectArticleNumByType" resultType="java.lang.Integer">
    select count(*)
    from vblog_article_label
    where label_id = #{typeId}
  </select>
  <select id="selectArticleByType" resultMap="ArticleAndUserMap">
    select vblog_article_label.article_id, vblog_article_label.label_id , vblog_article.virtual_id,  title, author_id,
    nickname, cover, hidden, content, article_abstract,
    release_time, reading_num, thumb_num
    from vblog_article_label
    left join vblog_article
    on vblog_article.article_id = vblog_article_label.article_id
    left join vblog_user
    on vblog_article.author_id = vblog_user.user_id
    left join vblog_article_dynamic
    on vblog_article.article_id = vblog_article_dynamic.article_id
    where vblog_article_label.label_id = #{typeId}
    limit #{start} ,#{num}
  </select>

  <select id="selectSingleArticle" parameterType="java.lang.Integer" resultMap="ArticleAndUserMap">
    select vblog_article.article_id, vblog_article.virtual_id, title, author_id,
    nickname, cover, hidden, content, article_abstract,
    release_time, reading_num, thumb_num
    from vblog_article
    left join vblog_article_dynamic
    on vblog_article.article_id = vblog_article_dynamic.article_id
    left join vblog_user
    on vblog_article.author_id = vblog_user.user_id
    where vblog_article.article_id = #{articleId}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from vblog_article
    where article_id = #{articleId,jdbcType=INTEGER}
  </delete>


  <insert id="insert" parameterType="com.hitwh.vblog.bean.ArticleDo" useGeneratedKeys="true" keyProperty="articleId">
    insert into vblog_article (article_id, virtual_id, title,
      author_id, cover, hidden, content,
      article_abstract, release_time, update_time
      )
    values (#{articleId,jdbcType=INTEGER}, #{virtualId,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR},
      #{authorId,jdbcType=INTEGER}, #{type1,jdbcType=INTEGER}, #{type2,jdbcType=INTEGER}, 
      #{cover,jdbcType=VARCHAR}, #{hidden,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR},
      #{articleAbstract,jdbcType=VARCHAR}, #{releaseTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>


  <insert id="insertSelective" parameterType="com.hitwh.vblog.bean.ArticleDo" useGeneratedKeys="true" keyProperty="articleId">
    insert into vblog_article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="articleId != null">
        article_id,
      </if>
      <if test="virtualId != null">
        virtual_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="authorId != null">
        author_id,
      </if>
      <if test="cover != null">
        cover,
      </if>
      <if test="hidden != null">
        hidden,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="articleAbstract != null">
        article_abstract,
      </if>
      <if test="releaseTime != null">
        release_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="articleId != null">
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="virtualId != null">
        #{virtualId,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="authorId != null">
        #{authorId,jdbcType=INTEGER},
      </if>
      <if test="cover != null">
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="hidden != null">
        #{hidden,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="articleAbstract != null">
        #{articleAbstract,jdbcType=VARCHAR},
      </if>
      <if test="releaseTime != null">
        #{releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hitwh.vblog.bean.ArticleDo">
    update vblog_article
    <set>
      <if test="virtualId != null">
        virtual_id = #{virtualId,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="authorId != null">
        author_id = #{authorId,jdbcType=INTEGER},
      </if>
      <if test="cover != null">
        cover = #{cover,jdbcType=VARCHAR},
      </if>
      <if test="hidden != null">
        hidden = #{hidden,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="articleAbstract != null">
        article_abstract = #{articleAbstract,jdbcType=VARCHAR},
      </if>
      <if test="releaseTime != null">
        release_time = #{releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where article_id = #{articleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hitwh.vblog.bean.ArticleDo">
    update vblog_article
    set virtual_id = #{virtualId,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      author_id = #{authorId,jdbcType=INTEGER},
      cover = #{cover,jdbcType=VARCHAR},
      hidden = #{hidden,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      article_abstract = #{articleAbstract,jdbcType=VARCHAR},
      release_time = #{releaseTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where article_id = #{articleId,jdbcType=INTEGER}
  </update>

  <select id="queryCollectionArticleByUser" resultMap="ArticleAndUserMap">
    SELECT vblog_article.article_id, vblog_article.virtual_id, title, author_id,
    nickname, cover, hidden, content, article_abstract,
    release_time, reading_num, thumb_num
    FROM vblog_collection_record
    RIGHT JOIN vblog_article
    ON vblog_article.article_id = vblog_collection_record.article_id
    RIGHT JOIN vblog_article_dynamic
    ON vblog_article.article_id = vblog_article_dynamic.article_id
    RIGHT JOIN vblog_user
    ON vblog_article.author_id = vblog_user.user_id
    WHERE vblog_collection_record.collector_id = #{userId}
    limit #{start} ,#{num}
  </select>

</mapper>